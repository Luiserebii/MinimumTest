version: 2

aliases:
  # Alias for any default options
  - &defaults
    docker:
      - image: debian:stretch

jobs:

  lint:
    <<: *defaults
    steps:
      - run:
          name: Install clang-format
          command: apt-get update && apt-get install -y git clang-format
      - checkout
      - run:
          name: Linter
          command: ./lint.sh && if [[ `git status --porcelain` ]]; then exit 1; else exit 0; fi

  # Building and running examples
  minimum:
    <<: *defaults
    steps:
      - run: 
          name: Install gcc
          command: apt-get update && apt-get install -y gcc g++
      - run: 
          name: Install CMake
          command: apt-get update && apt-get install -y cmake
#      <<: *install_packages
      - checkout
      - run:
          name: Minimum - Simple
          command: cd examples/minimal/simple && ./c.sh
      - run:
          name: Minimum - Assertions
          command: bash -c "cd examples/minimal/assertions && ./c.sh; if [[ \$? -eq 1 ]]; then exit 0; else exit 1; fi"
      - run:
          name: Minimum - Structuring
          command: cd examples/minimal/structuring && ./c.sh

  cmake:
    <<: *defaults
    steps:
      - run: 
          name: Install gcc
          command: apt-get update && apt-get install -y gcc g++
      - run: 
          name: Install CMake
          command: apt-get update && apt-get install -y cmake
            #      - *install_packages
      - checkout
      - run:
          name: CMake - Simple
          command: cd examples/cmake/simple && ./BUILD
      - run:
          name: CMake - Assertions
          command: bash -c "cd examples/cmake/assertions && ./BUILD; if [[ \$? -eq 1 ]]; then exit 0; else exit 1; fi"
      - run:
          name: CMake - Structuring
          command: cd examples/cmake/structuring && ./BUILD

workflows:
  version: 2
  everything:
    jobs: # For reference, all jobs run in parallel
      - lint
      - minimum
      - cmake
